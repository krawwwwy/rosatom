services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: rosatom
      POSTGRES_USER: rosatom
      POSTGRES_PASSWORD: rosatom
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rosatom -d rosatom"]
      interval: 30s
      timeout: 100s
      retries: 3

  sso:
    build:
      context: ./sso
      dockerfile: Dockerfile
    environment:
      CONFIG_PATH: /app/config/prod.yaml
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "44044:44044"
    networks:
      - app-network
    volumes:
      - ./sso/config/prod.yaml:/app/config/prod.yaml
    restart: unless-stopped

  telephone-book:
    build:
      context: ./telephone_book
      dockerfile: Dockerfile
    environment:
      CONFIG_PATH: /app/config/prod.yaml
    depends_on:
      - postgres
      - sso
    ports:
      - "8080:8080"
    networks:
      - app-network
    volumes:
      - ./telephone_book/config/prod.yaml:/app/config/prod.yaml
      - ./telephone_book/frontend:/app/frontend
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./telephone_book/frontend:/usr/share/nginx/html
    depends_on:
      - telephone-book
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge 